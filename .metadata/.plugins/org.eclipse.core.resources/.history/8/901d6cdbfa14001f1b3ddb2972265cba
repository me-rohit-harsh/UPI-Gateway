package com.emailSender.Controller;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.emailSender.Repository.UserRepository;
import com.emailSender.model.User;

import jakarta.validation.Valid;

@Controller
public class UserController {
	@Autowired
	private UserRepository userRepository;

	@GetMapping("/signup")
	public String showSignupForm(Model model) {
		model.addAttribute("user", new User());
		return "signup";
	}
	@PostMapping("/signup")
    public String signup(@ModelAttribute("user") @Valid User user, BindingResult result, RedirectAttributes redirectAttributes) {
        if (result.hasErrors()) {
            return "signup";
        }

        if (userRepository.existsByUsername(user.getUsername())) {
            result.rejectValue("username", "error.user", "Username is already taken");
            return "signup";
        }

        if (userRepository.existsByEmail(user.getEmail())) {
            result.rejectValue("email", "error.user", "Email is already registered");
            return "signup";
        }

        user.setBalance(0.0); // Set initial balance to 0
        userRepository.save(user);
        redirectAttributes.addFlashAttribute("message", "Account created successfully!");
        return "redirect:/signup";
    }

    @GetMapping("/api/check-username")
    public Map<String, Boolean> checkUsernameAvailability(@RequestParam String username) {
        System.out.println("I am in this block");
        boolean available = !userRepository.existsByUsername(username);
        System.out.println(username + " is " + available);
        Map<String, Boolean> response = new HashMap<>();
        response.put("available", available);
        return response;
    }

}
